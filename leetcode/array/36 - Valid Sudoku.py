#Medium - 36 - Valid Sudoku.py

import unittest    

def firstTry(board):
  """
  Accepted
  108ms | 14MB
  """
  big = set()
  for i in range(0,9):
    for j in range(0,9):
      if board[i][j]!='.':
        cur = board[i][j]
        if (i,cur) in big or (cur,j) in big or (i//3,j//3,cur) in big:
          return False
        big.add((i,cur))
        big.add((cur,j))
        big.add((i//3,j//3,cur))
  print("\n ",big, "\n")
  return True


def caller(board):
  return firstTry(board)

class Tests(unittest.TestCase):
    def tests(self):
      self.assertEqual(True, caller(
        board = 
          [["5","3",".",".","7",".",".",".","."]
          ,["6",".",".","1","9","5",".",".","."]
          ,[".","9","8",".",".",".",".","6","."]
          ,["8",".",".",".","6",".",".",".","3"]
          ,["4",".",".","8",".","3",".",".","1"]
          ,["7",".",".",".","2",".",".",".","6"]
          ,[".","6",".",".",".",".","2","8","."]
          ,[".",".",".","4","1","9",".",".","5"]
          ,[".",".",".",".","8",".",".","7","9"]]
      ))
      self.assertEqual(False, caller(
        board = 
          [["8","3",".",".","7",".",".",".","."]
          ,["6",".",".","1","9","5",".",".","."]
          ,[".","9","8",".",".",".",".","6","."]
          ,["8",".",".",".","6",".",".",".","3"]
          ,["4",".",".","8",".","3",".",".","1"]
          ,["7",".",".",".","2",".",".",".","6"]
          ,[".","6",".",".",".",".","2","8","."]
          ,[".",".",".","4","1","9",".",".","5"]
          ,[".",".",".",".","8",".",".","7","9"]]
      ))
      self.assertEqual(False, caller(
        board = 
          [[".",".",".",".","5",".",".","1","."]
          ,[".","4",".","3",".",".",".",".","."]
          ,[".",".",".",".",".","3",".",".","1"]
          ,["8",".",".",".",".",".",".","2","."]
          ,[".",".","2",".","7",".",".",".","."]
          ,[".","1","5",".",".",".",".",".","."]
          ,[".",".",".",".",".","2",".",".","."]
          ,[".","2",".","9",".",".",".",".","."]
          ,[".",".","4",".",".",".",".",".","."]]
      ))

if __name__ == '__main__':
    unittest.main()